<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ======================================================================================================= -->
<!-- This file is generated by bbdalgen (BBD Data Layer Generator), PLEASE DO NOT MODIFY THIS FILE MANUALLY! -->
<!--                                                                                                         -->
<!-- @author Byron Zhang                                                                                     -->
<!-- ======================================================================================================= -->

<sqlMap>
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table sso_visit_history -->
    <resultMap id="RM-SSO-VISIT-HISTORY" class="com.bbd.bdsso.common.dal.dataobject.SsoVisitHistoryDO">
        <result property="id" column="id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="userId" column="user_id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="lastLoginDate" column="last_login_date" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="lastLoginIp" column="last_login_ip" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="description" column="description" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="gmtModified" column="gmt_modified" javaType="java.util.Date" jdbcType="timestamp"/>
    </resultMap>
    
    <resultMap id="EX-RM-SSO-VISIT-HISTORY" class="com.bbd.bdsso.common.dal.manual.dataobject.ExSsoVisitHistoryDO">
        <result property="id" column="id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="userId" column="user_id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="lastLoginDate" column="last_login_date" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="lastLoginIp" column="last_login_ip" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="description" column="description" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="gmtModified" column="gmt_modified" javaType="java.util.Date" jdbcType="timestamp"/>
    </resultMap>

    <!-- mapped statement for IbatisSsoVisitHistoryDAO.fuzzyQueryForPage -->
    <select id="MS-Extra-SSO-VISIT-HISTORY-FUZZY-QUERY-FOR-PAGE" resultMap="EX-RM-SSO-VISIT-HISTORY">
				SELECT
					a.id as id,
					b.user_name as user_name,
					a.user_id as user_id,
					a.last_login_date as last_login_date,
					a.last_login_ip as last_login_ip,
					a.description as description,
					a.gmt_create as gmt_create,
					a.gmt_modified as gmt_modified
				FROM
					sso_visit_history a,
					sso_user b
				WHERE
					a.user_id = b.id
				<dynamic>
						<isNotEmpty prepend="AND" property="key">
							(b.user_name like concat('%', #key#, '%') or a.description like concat('%', #key#, '%') or a.last_login_ip like concat('%', #key#, '%'))
						</isNotEmpty>
				</dynamic>
				ORDER BY
					gmt_modified DESC
				LIMIT 
					#offset#, #pageSize#
    </select>

    <!-- mapped statement for IbatisSsoVisitHistoryDAO.fuzzyQueryForPage, needed by paging -->
    <select id="MS-BDSSO-Extra-SSO-VISIT-HISTORY-FUZZY-QUERY-FOR-PAGE-COUNT-FOR-PAGING" resultClass="int" >
				SELECT
					count(*)
				FROM
					sso_visit_history a,
					sso_user b
				WHERE
					a.user_id = b.id
				<dynamic>
						<isNotEmpty prepend="AND" property="key">
							(b.user_name like concat('%', #key#, '%') or a.description like concat('%', #key#, '%') or a.last_login_ip like concat('%', #key#, '%'))
						</isNotEmpty>
				</dynamic>
    </select>

</sqlMap>