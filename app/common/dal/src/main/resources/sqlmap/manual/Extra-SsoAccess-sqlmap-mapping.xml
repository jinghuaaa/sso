<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ======================================================================================================= -->
<!-- This file is generated by bbdalgen (BBD Data Layer Generator), PLEASE DO NOT MODIFY THIS FILE MANUALLY! -->
<!--                                                                                                         -->
<!-- @author Byron Zhang                                                                                     -->
<!-- ======================================================================================================= -->

<sqlMap>
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->
    <resultMap id="EX-RM-SSO-ACCESS" class="com.bbd.bdsso.common.dal.manual.dataobject.ExSsoAccessDO">
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="appName" column="app_name" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="roleName" column="role_name" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="authCode" column="auth_code" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="resourceName" column="resource_name" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="validDate" column="valid_date" javaType="java.util.Date" jdbcType="timestamp"/>
    </resultMap>
    
    <resultMap id="EX-RM-SSO-ACCESS-GROUP" class="com.bbd.bdsso.common.dal.manual.dataobject.ExSsoAccessGroupDO">
        <result property="userName" column="user_name" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="appName" column="app_name" javaType="java.lang.String" jdbcType="varchar"/>
    </resultMap>
    
    <select id="MS-Extra-SSO-ACCESS-QUERY-FOR-GROUP" resultMap="EX-RM-SSO-ACCESS-GROUP">
			SELECT
				a.user_name,
				g.app_name
			FROM
				sso_user a,
				sso_user_role b,
				sso_role c,
				sso_role_auth d,
				sso_auth e,
				sso_app g,
				sso_access h
			WHERE
				a.id = b.user_id
			AND b.role_id = c.id
			AND c.id = d.role_id
			AND d.auth_id = e.id
			AND g.id = e.app_id
			AND h.user_id = a.id
			AND c.is_enable = 1
			AND e.is_enable = 1
			AND a.is_enable = 1
			AND h.valid_date > now()
			GROUP BY
				a.user_name,
				g.app_name
			ORDER BY
				a.user_name ASC
    </select>

	<!-- 方法提供给本地缓存使用，直接使用性能较差 -->
    <!-- mapped statement for IbatisSsoAccessDAO.fuzzyQueryForPage -->
    <select id="MS-Extra-SSO-ACCESS-FUZZY-QUERY-FOR-PAGE" resultMap="EX-RM-SSO-ACCESS">
		SELECT
			x.user_name as user_name,
			x.app_name as app_name,
			x.role_name as role_name,
			x.auth_code as auth_code,
			z.resource_name as resource_name,
			x.valid_date as valid_date
		FROM
			(
				SELECT
					a.user_name,
					g.app_name,
					c.role_name,
					e.auth_code,
					h.valid_date,
					e.id
				FROM
					sso_user a,
					sso_user_role b,
					sso_role c,
					sso_role_auth d,
					sso_auth e,
					sso_app g,
					sso_access h
				WHERE
					a.id = b.user_id
				AND b.role_id = c.id
				AND c.id = d.role_id
				AND d.auth_id = e.id
				AND g.id = e.app_id
				AND h.user_id = a.id
				AND c.is_enable = 1
				AND e.is_enable = 1
				AND a.is_enable = 1
			)x
		LEFT JOIN sso_auth_resource y ON x.id = y.auth_id
		LEFT JOIN sso_resource z ON z.id = y.resource_id
		WHERE 1=1
		<dynamic>
			<isNotEmpty prepend="AND" property="key">
				(
					x.user_name like concat('%', #key#, '%') 
					or x.app_name like concat('%', #key#, '%') 
					or x.role_name like concat('%', #key#, '%') 
					or x.auth_code like concat('%', #key#, '%') 
					or z.resource_name like concat('%', #key#, '%')
				)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="AND" property="date">
				x.valid_date > #date#
			</isNotEmpty>
		</dynamic>
		ORDER BY
			x.user_name ASC
		LIMIT 
			#offset#, #pageSize#
    </select>

	<!-- 方法提供给本地缓存使用，直接使用性能较差 -->
    <!-- mapped statement for IbatisSsoAccessDAO.fuzzyQueryForPage, needed by paging -->
    <select id="MS-BDSSO-Extra-SSO-ACCESS-FUZZY-QUERY-FOR-PAGE-COUNT-FOR-PAGING" resultClass="int" >
		SELECT
			count(*)
		FROM
			(
				SELECT
					a.user_name,
					g.app_name,
					c.role_name,
					e.auth_code,
					h.valid_date,
					e.id
				FROM
					sso_user a,
					sso_user_role b,
					sso_role c,
					sso_role_auth d,
					sso_auth e,
					sso_app g,
					sso_access h
				WHERE
					a.id = b.user_id
				AND b.role_id = c.id
				AND c.id = d.role_id
				AND d.auth_id = e.id
				AND g.id = e.app_id
				AND h.user_id = a.id
				AND c.is_enable = 1
				AND e.is_enable = 1
				AND a.is_enable = 1
			)x
		LEFT JOIN sso_auth_resource y ON x.id = y.auth_id
		LEFT JOIN sso_resource z ON z.id = y.resource_id
		WHERE 1=1
		<dynamic>
			<isNotEmpty prepend="AND" property="key">
				(
					x.user_name like concat('%', #key#, '%') 
					or x.app_name like concat('%', #key#, '%') 
					or x.role_name like concat('%', #key#, '%') 
					or x.auth_code like concat('%', #key#, '%') 
					or z.resource_name like concat('%', #key#, '%')
				)
			</isNotEmpty>
		</dynamic>
		<dynamic>
			<isNotEmpty prepend="AND" property="date">
				x.valid_date > #date#
			</isNotEmpty>
		</dynamic>
    </select>

</sqlMap>