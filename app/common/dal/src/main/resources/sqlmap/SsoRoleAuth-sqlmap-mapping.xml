<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ======================================================================================================= -->
<!-- This file is generated by bbdalgen (BBD Data Layer Generator), PLEASE DO NOT MODIFY THIS FILE MANUALLY! -->
<!--                                                                                                         -->
<!-- @author Byron Zhang                                                                                     -->
<!-- ======================================================================================================= -->

<sqlMap>
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table sso_role_auth -->
    <resultMap id="RM-SSO-ROLE-AUTH" class="com.bbd.bdsso.common.dal.dataobject.SsoRoleAuthDO">
        <result property="id" column="id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="roleId" column="role_id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="authId" column="auth_id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="description" column="description" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="lastModifier" column="last_modifier" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="gmtModified" column="gmt_modified" javaType="java.util.Date" jdbcType="timestamp"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisSsoRoleAuthDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisSsoRoleAuthDAO.insert -->
    <insert id="MS-SSO-ROLE-AUTH-INSERT">
        INSERT /*MS-BDSSO-SSO-ROLE-AUTH-INSERT*/ INTO 
				sso_role_auth (
					role_id, 
					auth_id, 
					description, 
					last_modifier, 
					gmt_create, 
					gmt_modified
				)
				VALUES (#roleId#, #authId#, #description#, #lastModifier#, now(), now());
    </insert>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.delete -->
    <delete id="MS-SSO-ROLE-AUTH-DELETE" >
        DELETE /*MS-BDSSO-SSO-ROLE-AUTH-DELETE*/ FROM
					sso_role_auth
				WHERE 
					id = #id#;
    </delete>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.deleteByRoleId -->
    <delete id="MS-SSO-ROLE-AUTH-DELETE-BY-ROLE-ID" >
        DELETE /*MS-BDSSO-SSO-ROLE-AUTH-DELETE-BY-ROLE-ID*/ FROM
					sso_role_auth
				WHERE 
					role_id = #roleId#;
    </delete>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.deleteByRoleIdAndAuthId -->
    <delete id="MS-SSO-ROLE-AUTH-DELETE-BY-ROLE-ID-AND-AUTH-ID" >
        DELETE /*MS-BDSSO-SSO-ROLE-AUTH-DELETE-BY-ROLE-ID-AND-AUTH-ID*/ FROM
					sso_role_auth
				WHERE 
					role_id = #roleId#
				AND
					auth_id = #authId#
    </delete>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.update -->
    <update id="MS-SSO-ROLE-AUTH-UPDATE" >
        UPDATE /*MS-BDSSO-SSO-ROLE-AUTH-UPDATE*/ 
					sso_role_auth
				SET
					role_id = #roleId#, 
					auth_id = #authId#, 
					description = #description#, 
					last_modifier = #lastModifier#,  
					gmt_modified = now()
				WHERE 
					id = #id#;
    </update>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.query -->
    <select id="MS-SSO-ROLE-AUTH-QUERY" resultMap="RM-SSO-ROLE-AUTH" >
        SELECT /*MS-BDSSO-SSO-ROLE-AUTH-QUERY*/ 					id, 
					role_id, 
					auth_id, 
					description, 
					last_modifier, 
					gmt_create, 
					gmt_modified
				FROM
					sso_role_auth
				WHERE 
					id = #id#;
    </select>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.queryByRoleId -->
    <select id="MS-SSO-ROLE-AUTH-QUERY-BY-ROLE-ID" resultMap="RM-SSO-ROLE-AUTH" >
        SELECT /*MS-BDSSO-SSO-ROLE-AUTH-QUERY-BY-ROLE-ID*/ 					id, 
					role_id, 
					auth_id, 
					description, 
					last_modifier, 
					gmt_create, 
					gmt_modified
				FROM
					sso_role_auth
				WHERE 
					role_id = #roleId#;
    </select>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.queryByAuthId -->
    <select id="MS-SSO-ROLE-AUTH-QUERY-BY-AUTH-ID" resultMap="RM-SSO-ROLE-AUTH" >
        SELECT /*MS-BDSSO-SSO-ROLE-AUTH-QUERY-BY-AUTH-ID*/ 
					id, 
					role_id, 
					auth_id, 
					description, 
					last_modifier, 
					gmt_create, 
					gmt_modified
				FROM
					sso_role_auth
				WHERE 
					auth_id = #authId#;
    </select>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.queryByRoleIdAndAuthId -->
    <select id="MS-SSO-ROLE-AUTH-QUERY-BY-ROLE-ID-AND-AUTH-ID" resultMap="RM-SSO-ROLE-AUTH" >
        SELECT /*MS-BDSSO-SSO-ROLE-AUTH-QUERY-BY-ROLE-ID-AND-AUTH-ID*/ 
					id, 
					role_id, 
					auth_id, 
					description, 
					last_modifier, 
					gmt_create, 
					gmt_modified
				FROM
					sso_role_auth
				WHERE 
					role_id = #roleId#
				AND 
					auth_id = #authId#
    </select>

    <!-- mapped statement for IbatisSsoRoleAuthDAO.deleteByDesc -->
    <delete id="MS-SSO-ROLE-AUTH-DELETE-BY-DESC" >
        DELETE /*MS-BDSSO-SSO-ROLE-AUTH-DELETE-BY-DESC*/ FROM
					sso_role_auth
				WHERE 
					description like 
				CONCAT(CONCAT('%', #description#), '%');
    </delete>

</sqlMap>