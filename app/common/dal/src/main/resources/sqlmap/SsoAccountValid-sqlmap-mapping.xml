<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ======================================================================================================= -->
<!-- This file is generated by bbdalgen (BBD Data Layer Generator), PLEASE DO NOT MODIFY THIS FILE MANUALLY! -->
<!--                                                                                                         -->
<!-- @author Byron Zhang                                                                                     -->
<!-- ======================================================================================================= -->

<sqlMap>
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table sso_account_valid -->
    <resultMap id="RM-SSO-ACCOUNT-VALID" class="com.bbd.bdsso.common.dal.dataobject.SsoAccountValidDO">
        <result property="id" column="id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="email" column="email" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="verifyCode" column="verify_code" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="isVerified" column="is_verified" javaType="int" jdbcType="int" nullValue="0"/>
        <result property="type" column="type" javaType="int" jdbcType="int" nullValue="0"/>
        <result property="validDate" column="valid_date" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="description" column="description" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="gmtModified" column="gmt_modified" javaType="java.util.Date" jdbcType="timestamp"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisSsoAccountValidDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisSsoAccountValidDAO.insert -->
    <insert id="MS-SSO-ACCOUNT-VALID-INSERT">
        INSERT /*MS-BDSSO-SSO-ACCOUNT-VALID-INSERT*/ INTO 
				sso_account_valid (
					email, 
					verify_code, 
					is_verified, 
					type, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				)
				VALUES (#email#, #verifyCode#, #isVerified#, #type#, #validDate#, #description#, now(), now());
    </insert>

    <!-- mapped statement for IbatisSsoAccountValidDAO.delete -->
    <delete id="MS-SSO-ACCOUNT-VALID-DELETE" >
        DELETE /*MS-BDSSO-SSO-ACCOUNT-VALID-DELETE*/ FROM
					sso_account_valid
				WHERE 
					id = #id#;
    </delete>

    <!-- mapped statement for IbatisSsoAccountValidDAO.update -->
    <update id="MS-SSO-ACCOUNT-VALID-UPDATE" >
        UPDATE /*MS-BDSSO-SSO-ACCOUNT-VALID-UPDATE*/ 
					sso_account_valid
				SET
					email = #email#, 
					verify_code = #verifyCode#, 
					is_verified = #isVerified#, 
					type = #type#, 
					valid_date = #validDate#, 
					description = #description#, 
					gmt_modified = now()
				WHERE 
					id = #id#;
    </update>

    <!-- mapped statement for IbatisSsoAccountValidDAO.updateByEmailAndType -->
    <update id="MS-SSO-ACCOUNT-VALID-UPDATE-BY-EMAIL-AND-TYPE" >
        UPDATE /*MS-BDSSO-SSO-ACCOUNT-VALID-UPDATE-BY-EMAIL-AND-TYPE*/ 
					sso_account_valid
				SET
					is_verified = #isVerified#, 
					gmt_modified = now()
				WHERE 
					email = #email#
				AND
					type = #type#;
    </update>

    <!-- mapped statement for IbatisSsoAccountValidDAO.query -->
    <select id="MS-SSO-ACCOUNT-VALID-QUERY" resultMap="RM-SSO-ACCOUNT-VALID" >
        SELECT /*MS-BDSSO-SSO-ACCOUNT-VALID-QUERY*/ 
					id, 
					email, 
					verify_code, 
					is_verified, 
					type, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_account_valid
				WHERE 
					id = #id#;
    </select>

    <!-- mapped statement for IbatisSsoAccountValidDAO.queryByEmail -->
    <select id="MS-SSO-ACCOUNT-VALID-QUERY-BY-EMAIL" resultMap="RM-SSO-ACCOUNT-VALID" >
        SELECT /*MS-BDSSO-SSO-ACCOUNT-VALID-QUERY-BY-EMAIL*/ 
					id, 
					email, 
					verify_code, 
					is_verified, 
					type, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_account_valid
				WHERE 
					email = #email#
				ORDER BY 
					gmt_create DESC
				LIMIT 1;
    </select>

    <!-- mapped statement for IbatisSsoAccountValidDAO.queryByEmailAndVerifyCode -->
    <select id="MS-SSO-ACCOUNT-VALID-QUERY-BY-EMAIL-AND-VERIFY-CODE" resultMap="RM-SSO-ACCOUNT-VALID" >
        SELECT /*MS-BDSSO-SSO-ACCOUNT-VALID-QUERY-BY-EMAIL-AND-VERIFY-CODE*/ 
					id, 
					email, 
					verify_code, 
					is_verified, 
					type, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_account_valid
				WHERE 
					email = #email#
				AND 
					verify_code = #verifyCode#
				AND 
					is_verified = 0
				AND 
					type = #type#;
    </select>

    <!-- mapped statement for IbatisSsoAccountValidDAO.deleteByDesc -->
    <delete id="MS-SSO-ACCOUNT-VALID-DELETE-BY-DESC" >
        DELETE /*MS-BDSSO-SSO-ACCOUNT-VALID-DELETE-BY-DESC*/ FROM
					sso_account_valid
				WHERE 
					description like 
				CONCAT(CONCAT('%', #description#), '%');
    </delete>

</sqlMap>