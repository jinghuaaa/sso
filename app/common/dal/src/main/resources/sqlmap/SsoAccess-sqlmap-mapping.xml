<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ======================================================================================================= -->
<!-- This file is generated by bbdalgen (BBD Data Layer Generator), PLEASE DO NOT MODIFY THIS FILE MANUALLY! -->
<!--                                                                                                         -->
<!-- @author Byron Zhang                                                                                     -->
<!-- ======================================================================================================= -->

<sqlMap>
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table sso_access -->
    <resultMap id="RM-SSO-ACCESS" class="com.bbd.bdsso.common.dal.dataobject.SsoAccessDO">
        <result property="id" column="id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="userId" column="user_id" javaType="java.lang.Integer" jdbcType="int"/>
        <result property="token" column="token" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="validDate" column="valid_date" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="description" column="description" javaType="java.lang.String" jdbcType="varchar"/>
        <result property="gmtCreate" column="gmt_create" javaType="java.util.Date" jdbcType="timestamp"/>
        <result property="gmtModified" column="gmt_modified" javaType="java.util.Date" jdbcType="timestamp"/>
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisSsoAccessDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisSsoAccessDAO.insert -->
    <insert id="MS-SSO-ACCESS-INSERT">
        INSERT /*MS-BDSSO-SSO-ACCESS-INSERT*/ INTO 
				sso_access (
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				)
				VALUES (#userId#, #token#, #validDate#, #description#, now(), now());
    </insert>

    <!-- mapped statement for IbatisSsoAccessDAO.delete -->
    <delete id="MS-SSO-ACCESS-DELETE" >
        DELETE /*MS-BDSSO-SSO-ACCESS-DELETE*/ FROM
					sso_access
				WHERE 
					id = #id#;
    </delete>

    <!-- mapped statement for IbatisSsoAccessDAO.deleteByUserId -->
    <delete id="MS-SSO-ACCESS-DELETE-BY-USER-ID" >
        DELETE /*MS-BDSSO-SSO-ACCESS-DELETE-BY-USER-ID*/ FROM
					sso_access
				WHERE 
					user_id = #userId#;
    </delete>

    <!-- mapped statement for IbatisSsoAccessDAO.deleteByUserIdAndToken -->
    <delete id="MS-SSO-ACCESS-DELETE-BY-USER-ID-AND-TOKEN" >
        DELETE /*MS-BDSSO-SSO-ACCESS-DELETE-BY-USER-ID-AND-TOKEN*/ FROM
					sso_access
				WHERE 
					user_id = #userId#
				AND 
					token = #token#;
    </delete>

    <!-- mapped statement for IbatisSsoAccessDAO.update -->
    <update id="MS-SSO-ACCESS-UPDATE" >
        UPDATE /*MS-BDSSO-SSO-ACCESS-UPDATE*/ 
					sso_access
				SET
					user_id = #userId#, 
					token = #token#, 
					valid_date = #validDate#, 
					description = #description#,
					gmt_modified  = now()
				WHERE 
					id = #id#;
    </update>

    <!-- mapped statement for IbatisSsoAccessDAO.updateValidDate -->
    <update id="MS-SSO-ACCESS-UPDATE-VALID-DATE" >
        UPDATE /*MS-BDSSO-SSO-ACCESS-UPDATE-VALID-DATE*/ 
					sso_access
				SET
					valid_date = #validDate#, 
					gmt_modified  = now()
				WHERE 
					user_id = #userId#;
    </update>

    <!-- mapped statement for IbatisSsoAccessDAO.query -->
    <select id="MS-SSO-ACCESS-QUERY" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-QUERY*/ 
					id, 
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_access
				WHERE 
					id = #id#;
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.queryAll -->
    <select id="MS-SSO-ACCESS-QUERY-ALL" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-QUERY-ALL*/ 
					id, 
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_access
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.queryByUserId -->
    <select id="MS-SSO-ACCESS-QUERY-BY-USER-ID" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-QUERY-BY-USER-ID*/ 
					id, 
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_access
				WHERE 
					user_id = #userId#;
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.queryByToken -->
    <select id="MS-SSO-ACCESS-QUERY-BY-TOKEN" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-QUERY-BY-TOKEN*/ 
					id, 
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_access
				WHERE 
					token = #token#;
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.queryByUserIdAndToken -->
    <select id="MS-SSO-ACCESS-QUERY-BY-USER-ID-AND-TOKEN" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-QUERY-BY-USER-ID-AND-TOKEN*/ 
					id, 
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_access
				WHERE 
					user_id = #userId#
				AND
					token = #token#;
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.queryByDate -->
    <select id="MS-SSO-ACCESS-QUERY-BY-DATE" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-QUERY-BY-DATE*/ 
					id, 
					user_id, 
					token, 
					valid_date, 
					description, 
					gmt_create, 
					gmt_modified
				FROM
					sso_access
				WHERE 
					1=1
				<dynamic>
					<isNotEmpty prepend="AND">
						valid_date > #validDate#
					</isNotEmpty>
				</dynamic>
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.checkValid -->
    <select id="MS-SSO-ACCESS-CHECK-VALID" resultMap="RM-SSO-ACCESS" >
        SELECT /*MS-BDSSO-SSO-ACCESS-CHECK-VALID*/ 					a.id as id,
					a.user_id as user_id,
					a.token as token,
					a.description as description,
					a.valid_date as valid_date,
					a.gmt_create as gmt_create,
					a.gmt_modified as gmt_modified
				FROM
					sso_access a,
					sso_user b
				WHERE
					a.user_id = b.id
				AND b.is_enable = 1
				AND a.valid_date > now()
				AND a.user_id = #userId#
				AND a.token = #token#
    </select>

    <!-- mapped statement for IbatisSsoAccessDAO.deleteByDesc -->
    <delete id="MS-SSO-ACCESS-DELETE-BY-DESC" >
        DELETE /*MS-BDSSO-SSO-ACCESS-DELETE-BY-DESC*/ FROM
					sso_access
				WHERE 
					description like 
				CONCAT(CONCAT('%', #description#), '%');
    </delete>

</sqlMap>