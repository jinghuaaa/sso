/*
 * bbdservice.com Inc.
 * Copyright (c) 2017 All Rights Reserved.
 */
package com.bbd.bdsso.common.dal.daointerface;

// auto generated imports
import com.bbd.bdsso.common.dal.dataobject.SsoVisitHistoryDO;
import org.springframework.dao.DataAccessException;
import java.util.List;

/**
 * A dao interface provides methods to access database table <tt>sso_visit_history</tt>.
 *
 * This file is generated by <tt>bdsso-bbdalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>bdsso</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/bbdalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/sso_visit_history.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>bdsso-bbdalgen</tt> 
 * to generate this file.
 *
 * @author Byron Zhang
 * @version $Id: description-java.vm,v 1.1 2016/05/01 07:34:20 byron Exp $
 */
public interface SsoVisitHistoryDAO {
	/**
	 *  Insert one <tt>SsoVisitHistoryDO</tt> object to DB table <tt>sso_visit_history</tt>, return primary key
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into sso_visit_history(user_id,last_login_date,last_login_ip,description,gmt_create,gmt_modified) values (?, ?, ?, ?, ?, ?)</tt>
	 *
	 *	@param ssoVisitHistory
	 *	@return Integer
	 *	@throws DataAccessException
	 */	 
    public Integer insert(SsoVisitHistoryDO ssoVisitHistory) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>sso_visit_history</tt>.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from sso_visit_history where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int delete(Integer id) throws DataAccessException;

	/**
	 *  Update DB table <tt>sso_visit_history</tt>.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sso_visit_history set user_id=?, last_login_date=?, last_login_ip=?, description=?, gmt_modified=? where (id = ?)</tt>
	 *
	 *	@param ssoVisitHistory
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int update(SsoVisitHistoryDO ssoVisitHistory) throws DataAccessException;

	/**
	 *  Query DB table <tt>sso_visit_history</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, last_login_date, last_login_ip, description, gmt_create, gmt_modified from sso_visit_history where (id = ?)</tt>
	 *
	 *	@param id
	 *	@return SsoVisitHistoryDO
	 *	@throws DataAccessException
	 */	 
    public SsoVisitHistoryDO query(Integer id) throws DataAccessException;

	/**
	 *  Query DB table <tt>sso_visit_history</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, user_id, last_login_date, last_login_ip, description, gmt_create, gmt_modified from sso_visit_history where (user_id = ?)</tt>
	 *
	 *	@param userId
	 *	@return List<SsoVisitHistoryDO>
	 *	@throws DataAccessException
	 */	 
    public List<SsoVisitHistoryDO> queryByUserId(Integer userId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>sso_visit_history</tt>.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from sso_visit_history where (description LIKE ?)</tt>
	 *
	 *	@param description
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteByDesc(String description) throws DataAccessException;

}